using UnityEngine;[ExecuteAlways]public class DynamicPlatformBetweenPoints : MonoBehaviour{    public Transform pointA;    public Transform pointB;    public float thicknessx = 0.2f;  // 平台的厚度（宽度和高度）    public float thicknessy = 0.2f;  // 平台的厚度（宽度和高度）    private BoxCollider boxCollider;    void Update()    {        if (pointA == null || pointB == null) return;        Vector3 center = (pointA.position + pointB.position) / 2f;        Vector3 direction = pointB.position - pointA.position;        float length = direction.magnitude;        transform.position = center;        transform.rotation = Quaternion.LookRotation(direction);        // 拉伸平台模型（默认模型朝Z轴）        transform.localScale = new Vector3(thicknessx, thicknessy, length);        // 更新 BoxCollider 大小与中心        if (boxCollider == null)            boxCollider = GetComponent<BoxCollider>();        if (boxCollider != null)        {            boxCollider.size = new Vector3(1f, 1f, 1f); // 使用 scale 处理拉伸            boxCollider.center = Vector3.zero;        }    }}