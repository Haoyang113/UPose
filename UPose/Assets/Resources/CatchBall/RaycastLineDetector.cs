using UnityEngine;using UnityEngine.Events;public class RaycastLineDetector : MonoBehaviour{    public Transform pointA;  // 起点    public Transform pointB;  // 终点    public LayerMask detectionMask; // 可选：检测的层    public UnityEvent onFull;    public bool isTriggered = false;        void Update()    {        if (pointA == null || pointB == null) return;        Vector3 direction = pointB.position - pointA.position;        float distance = direction.magnitude;        // 执行射线检测，检测沿AB之间的所有碰撞体        RaycastHit[] hits = Physics.RaycastAll(pointA.position, direction.normalized, distance, detectionMask);        int sphereCount = 0;        foreach (var hit in hits)        {            if (hit.collider.CompareTag("target"))            {                sphereCount++;            }        }        if (sphereCount>=5 && !isTriggered)        {            isTriggered = true;            onFull.Invoke();        }        Debug.DrawLine(pointA.position, pointB.position, Color.red); // 可视化射线    }}